{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"test/","text":"p.attr { margin-top: 0.5em; margin-left: 1em; } p.func-header { background-color: gainsboro; border-radius: 0.1em; padding: 0.5em; padding-left: 1em; } table.field-table { border-radius: 0.1em } Test src.test. my_func def src.test. my_func ( param0, param1=1.0 ) This is my function. Parameters: param0 : str This is parameter 0. param0 . param1 : float This is parameter 1. Returns: None : Examples my_func('hello', 'world') Out: hello world src.test. MyClass class src.test. MyClass ( param0, param1=1, param2=lambda x: x ) This is my class. Its description is on multiple lines. And it's two paragraphs long. Parameters: param0 : str This is parameter 0. param1 : int This is parameter 1. param2 : callable This is parameter 2. Attributes: attr0 : str This is attribute 0. attr1 : int This is attribute 1. Notes This is a note. Examples print('hello world') Out: hello world Methods print_greeting ( self, name='world' ) This method prints a greeting. Parameters: name : str This is the name of the person to greet. Returns: greeting : str Of the form 'hello, {name}!'. print_goodbye ( self, name='moon' ) This method prints goodbye. Parameters: name : str, default='moon' The name of the person to say goodbye to. Returns: goodbye : str Of the form 'goodbye, {name}!' Notes This is a note. Examples cls = MyClass(param0, param1) cls.print_goodbye() Out: goodbye, moon!","title":"Test"},{"location":"test/#test","text":"","title":"Test"},{"location":"test/#srctestmy_func","text":"def src.test. my_func ( param0, param1=1.0 ) This is my function. Parameters: param0 : str This is parameter 0. param0 . param1 : float This is parameter 1. Returns: None :","title":"src.test.my_func"},{"location":"test/#examples","text":"my_func('hello', 'world') Out: hello world","title":"Examples"},{"location":"test/#srctestmyclass","text":"class src.test. MyClass ( param0, param1=1, param2=lambda x: x ) This is my class. Its description is on multiple lines. And it's two paragraphs long. Parameters: param0 : str This is parameter 0. param1 : int This is parameter 1. param2 : callable This is parameter 2. Attributes: attr0 : str This is attribute 0. attr1 : int This is attribute 1.","title":"src.test.MyClass"},{"location":"test/#notes","text":"This is a note.","title":"Notes"},{"location":"test/#examples_1","text":"print('hello world') Out: hello world","title":"Examples"},{"location":"test/#methods","text":"print_greeting ( self, name='world' ) This method prints a greeting. Parameters: name : str This is the name of the person to greet. Returns: greeting : str Of the form 'hello, {name}!'. print_goodbye ( self, name='moon' ) This method prints goodbye. Parameters: name : str, default='moon' The name of the person to say goodbye to. Returns: goodbye : str Of the form 'goodbye, {name}!' Notes This is a note. Examples cls = MyClass(param0, param1) cls.print_goodbye() Out: goodbye, moon!","title":"Methods"}]}